[{"/Users/maslovn/Documents/WebStorm/RR/rr_maslov/src/reportWebVitals.js":"1","/Users/maslovn/Documents/WebStorm/RR/rr_maslov/src/App.js":"2","/Users/maslovn/Documents/WebStorm/RR/rr_maslov/src/index.js":"3"},{"size":362,"mtime":1608133710162,"results":"4","hashOfConfig":"5"},{"size":2131,"mtime":1608212697083,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1608133710161,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p1xi1s",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maslovn/Documents/WebStorm/RR/rr_maslov/src/reportWebVitals.js",[],"/Users/maslovn/Documents/WebStorm/RR/rr_maslov/src/App.js",["15"],"import './App.css';\nimport React, {useEffect, useState} from 'react'\nimport bwipjs from \"bwip-js\";\nimport TextField from '@material-ui/core/TextField';\n\nfunction App() {\n\n  const [ text, setText] = useState('');\n  const [ binary, setBinary] = useState([]);\n  const [ hex, setHex] = useState(false);\n\n  useEffect(()=>{\n    let arr = [];\n    try {\n      for(let i = 0; i < text.length; i++){\n        let str = '';\n        let hexStr = parseInt(text[i], 16).toString(2);\n        console.log(hexStr, hexStr.length);\n        if(hexStr.length < 4){\n          for(let i = 0; i < 4 - hexStr.length; i++){\n            str += '0';\n          }\n        }\n        console.log(str);\n        arr.push(str + parseInt(text[i], 16).toString(2))\n      }\n      setBinary(arr)\n        let canvas = bwipjs.toCanvas(\"mycanvas\", {\n          bcid: \"plessey\", // Barcode type\n          text: text, // Text to encode\n          scale: 3, // 3x scaling factor\n          height: 10, // Bar height, in millimeters\n          includetext: true, // Show human-readable text\n          textxalign: \"center\" // Always good to set this\n        });\n      } catch (e) {\n        // `e` may be a string or Error object\n      }\n\n  }, [text]);\n\n\n  return (\n    <div className=\"App\">\n      <body className=\"App-header\">\n      <p>Maslov KP-01mp</p>\n      <p>Variant 14 - Plessey</p>\n      {text && <canvas id=\"mycanvas\"></canvas>}\n      {hex && <p>{binary.join(' ')}</p>}\n        <div>\n          <form className={'root'} noValidate autoComplete=\"off\">\n            <TextField onChange={(event)=> {\n              const re = /[0-9A-F]*/g;\n              if(event.target.value.match(re)[0]){\n                setHex(true);\n                setText(event.target.value)\n              } else{\n                setHex(false)\n                setText('')\n              }\n            }} id=\"outlined-basic\" label=\"Encode\" variant=\"outlined\" />\n          </form>\n          <h5>This symbology supports the following hexadecimal characters:</h5>\n          <p>All numeric digits (0-9)</p>\n          <p>Uppercase letters A-F</p>\n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/maslovn/Documents/WebStorm/RR/rr_maslov/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":28,"column":13,"nodeType":"18","messageId":"19","endLine":28,"endColumn":19},"no-unused-vars","'canvas' is assigned a value but never used.","Identifier","unusedVar"]